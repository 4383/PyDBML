# common
name ::= [alphanums + "_"] | \".+\"
StringLiteral ::= "\"" + DoubleStringCharacter* "\"" | "'''" + MultiLineStringCharacter* + "'''"
Expression ::= "`" + [^`]+ "`"
BooleanLiteral ::= "true" | "false" | "null"
NumberLiteral ::= float | nums
float ::= nums + '.' + nums
comment ::= '\\' .* endline

# table
table ::= "Table" name + "{" + table_column + "}""

table_column ::= name column_type constrains? column_settings? comment?

column_type ::= type_name type_args?
type_name ::= [alphanums + "_[]"] | \".+\"
type_args ::= "(" + expression + ")"
expression ::= factor*
factor ::= characters? + "(" expression ")" | exprCharNoCommaSpace + ("," | ");" | "\n);") | exprChars + .
characters ::= [alphanums + "_"]
exprChars ::= [alfanums + "'`,._+-" + whitespace]
exprCharNoCommaSpace ::= alfanums + "'`._+-"

constraints ::= ("unique" | "pk")*

column_settings ::= "[" + column_setting ("," + column_setting)* + "]"
column_setting ::= "not null" | "null" | "primary" | "pk" | "unique" | "increment" | note | RefInline | Default

note ::= "note:" + StringLiteral
DoubleStringCharacter ::= "\\"+"\""
MultiLineStringCharacter ::= !"'''"

RefInline ::= "ref:" + relation name.name
relation ::= [">-<"]

Default ::= "default:" + (StringLiteral | Expression | BooleanLiteral | NumberLiteral)
